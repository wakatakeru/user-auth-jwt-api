// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/controllers/jwt_handler.go

// Package controllers is a generated GoMock package.
package controllers

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/wakatakeru/user-auth-jwt-api/domain"
	reflect "reflect"
)

// MockJWTHandler is a mock of JWTHandler interface.
type MockJWTHandler struct {
	ctrl     *gomock.Controller
	recorder *MockJWTHandlerMockRecorder
}

// MockJWTHandlerMockRecorder is the mock recorder for MockJWTHandler.
type MockJWTHandlerMockRecorder struct {
	mock *MockJWTHandler
}

// NewMockJWTHandler creates a new mock instance.
func NewMockJWTHandler(ctrl *gomock.Controller) *MockJWTHandler {
	mock := &MockJWTHandler{ctrl: ctrl}
	mock.recorder = &MockJWTHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTHandler) EXPECT() *MockJWTHandlerMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockJWTHandler) Generate(arg0 domain.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockJWTHandlerMockRecorder) Generate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockJWTHandler)(nil).Generate), arg0)
}

// Verify mocks base method.
func (m *MockJWTHandler) Verify(arg0 string) (domain.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", arg0)
	ret0, _ := ret[0].(domain.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify.
func (mr *MockJWTHandlerMockRecorder) Verify(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockJWTHandler)(nil).Verify), arg0)
}
